%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 1  

imu_topic: "/imu/data"
image0_topic: "/camera/image_mono"
output_path: "~/output"

cam0_calib: "test_payload_cam.yaml"
#cam0_calib: "test_payload_cam1.yaml"
image_width: 1440
image_height: 1080
   
#Enable deskewed lidar
#point_cloud_topic: "/lvi_sam/lidar/deskew/cloud_deskewed"
#Enable raw lidar
point_cloud_topic: "/velodyne_points"
use_dense_cloud: 0  # if 0 uses the current scan only for depth enhancement

# Lidar Params
use_lidar: 1                     # whether use depth info from lidar or not
lidar_skip: 3                    # skip this amount of scans
align_camera_lidar_estimation: 1 # align camera and lidar estimation for visualization

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [-0.0009792,   0.00685726,  0.99997601, 0.18648448,
           0.99931723, -0.03692628,  0.00123178, -0.04199414,
           0.03693384,  0.99929446, -0.00681642, -0.03693199,
           0, 0, 0, 1]

#Rotation from lidar frame to camera frame, cam^R_lidar
extrinsicRotationLidar: !!opencv-matrix
   rows: 3
   cols: 3
   dt: d
   data: [ -0.0062, -0.9992, -0.0393, 
            0.0040, 0.0392, -0.9992,
            1.00, -0.0063, 0.0038]

#Translation from lidar frame to camera frame, cam^t_lidar
extrinsicTranslationLidar: !!opencv-matrix
   rows: 3
   cols: 1
   dt: d
   data: [0.0923, 0.0388, -0.074]

# lidar to camera extrinsic  -  this is the fine tuning for the Lidar expose using dynamic reconfigure to adjust
lidar_to_cam_tx: 0
lidar_to_cam_ty: 0
lidar_to_cam_tz: 0
lidar_to_cam_rx: -0.1
lidar_to_cam_ry: 0
lidar_to_cam_rz: -0.015   #+ve yaw

#Multiple thread support
multiple_thread: 1
use_gpu: 1
use_gpu_acc_flow: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
equalize: 1
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.08          # accelerometer measurement noise standard deviation. 
gyr_n: 0.004        # gyroscope measurement noise standard deviation.     
acc_w: 0.00004        # accelerometer bias random work noise standard deviation.  
gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     
g_norm: 9.803     # gravity magnitude

#unsynchronization parameters
estimate_td: 0                      # online estimate time offset between camera and imu
td: -0.02932                        # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/storage_ssd/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

#segmentation parameter
seg: 0
det: 0

#masks in config folder of the same config file
car_mask: "car_mask.jpg"
bus_mask: "bus_mask.jpg"

#file saving and groundtruth
test_name: "mun_loop_devins"
save_groundtruth: 1
use_ppk: 0
rtk_unreliable: 0
ppk_pos_file: ""